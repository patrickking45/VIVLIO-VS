@model  IEnumerable<VIVLIO.OFFER>

<link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">

@{
    ViewBag.Title = "Offres";
}

<div class="offersWrapper">
   
        <div class="top">
            <div class="left">
                <p class="create">
                    @Html.ActionLink("Publier une offre", "Create")
                </p>
            </div>
                      
               <div class="middle">
                    <!--<p></p>-->
                @using (Html.BeginForm(FormMethod.Post))
                {
                        <input id="searchStr" placeholder="Rechercher..." name="searchStr" type="text" />
                        <input id="Submit1" type="submit" value="submit" />
                }                          
                </div>
            
        @using (Html.BeginForm(FormMethod.Post))
        {
            <div class="right">
                Matière: @Html.DropDownList("Matiere", new SelectList(ViewBag.ListofMatiere), "Tout")
                Niveau: @Html.DropDownList("Niveau", new SelectList(ViewBag.ListofNiveau), "Tout")
                <button class="search" type="submit">Filtrer</button>
            </div>
        }
        </div>
        <table class="table offers">
                @foreach (var item in Model)
                {
                    <tr onclick="location.href = '@(Url.Action("Details", "Offers", new { id = item.OFFERID }))'">
                        <td class="displayImage">
                            @if (item.PICTURE != null)
                            {
                                <img src="@Url.Content("~/Content/Images/OffersImage/" + item.PICTURE)" />
                            }
                            else {
                                <img src="@Url.Content("~/Content/Images/OffersImage/" + "noImage.png")" />
                            }
                        </td>
                        <td class="desc">
                            <h3 class="title">@Html.DisplayFor(modelItem => item.NAME)</h3>
                            <p class="author">De: @Html.DisplayFor(modelItem => item.AUTHOR_COMPANYNAME)</p>
                            <p>@Html.DisplayFor(modelItem => item.DESCRIPTION)</p>
                        </td>
                        <td class="info">
                            <p class="seller">Vendu par: @Html.ActionLink(item.Users.Prenom + " " + item.Users.Name, "Contact", "Users", new { id = item.USERID }, null)</p>
                            <p class="condition">Condition: @Html.DisplayFor(modelItem => item.CONDITION)</p>
                            <p class="matiere">Matière: @Html.DisplayFor(modelItem => item.MATIERE.SUBJECTMATTER)</p>
                            <p class="niveau">Niveau: @Html.DisplayFor(modelItem => item.NIVEAU.NIVEAUNAME)</p>
                        </td>
                        <td class="price">
                            @Html.DisplayFor(modelItem => item.PRICE) $
                        </td>
                    </tr>
                }
            </table>
    

                <div class="pagination">
                    @{
                        if (ViewBag.lastPage == null)
                        {
                            @Html.ActionLink("<", "Index", new { page = 1 }, null)
                        }
                        else
                        {
                            @Html.ActionLink("<", "Index", new { page = ViewBag.lastPage - 1 }, null)
                        }
                        <a></a>
                        for (var i = 1; i <= ViewBag.Num + 1; i++)
                        {
                            @Html.ActionLink(i.ToString(), "Index", new { page = i }, null)
                            <a></a>
                        }
                        if (ViewBag.lastPage == null)
                        {
                            @Html.ActionLink(">", "Index", new { page = 2 }, null)
                        }
                        else
                        {
                            @Html.ActionLink(">", "Index", new { page = ViewBag.lastPage + 1 }, null)
                        }
                        <a></a>
                    }
                </div>
            </div>
